name: Auto PR and Merge

# Trigger on pushes to branches matching auto/* pattern
# These branches are created by automated commits/builds
on:
  push:
    branches:
      - 'auto/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-pr-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch name
        id: branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Branch: $BRANCH_NAME"

      - name: Create Pull Request
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract commit message for PR title
          COMMIT_MSG=$(git log -1 --pretty=%B)
          PR_TITLE="${COMMIT_MSG}"
          
          # Create PR body with details
          PR_BODY="## Automated Pull Request

          This PR was automatically created from branch \`${{ steps.branch.outputs.branch }}\`.

          **Commit Message:**
          \`\`\`
          ${COMMIT_MSG}
          \`\`\`

          **Changes:**
          - Auto-generated from automated commit
          - Will be auto-merged after creation
          
          ---
          _This PR is part of the automated workflow and requires no manual review._"
          
          # Create the PR
          PR_URL=$(gh pr create \
            --title "${PR_TITLE}" \
            --body "${PR_BODY}" \
            --base main \
            --head "${{ steps.branch.outputs.branch }}" \
            --label "automated" \
            --label "auto-merge" 2>&1)
          
          echo "PR created: $PR_URL"
          
          # Extract PR number from URL
          PR_NUMBER=$(echo "$PR_URL" | grep -oP 'pull/\K[0-9]+' || echo "")
          if [ -z "$PR_NUMBER" ]; then
            # Try alternative extraction
            PR_NUMBER=$(gh pr list --head "${{ steps.branch.outputs.branch }}" --json number --jq '.[0].number')
          fi
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PR Number: $PR_NUMBER"

      - name: Wait for PR checks
        if: steps.create-pr.outputs.pr_number != ''
        run: |
          echo "Waiting 5 seconds for PR to be fully created..."
          sleep 5

      - name: Auto-merge Pull Request
        if: steps.create-pr.outputs.pr_number != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pr_number }}"
          
          # Enable auto-merge with squash strategy
          gh pr merge "$PR_NUMBER" \
            --squash \
            --auto \
            --delete-branch \
            --body "Auto-merged by GitHub Actions"
          
          echo "✅ PR #$PR_NUMBER set to auto-merge"

      - name: Manual merge fallback
        if: steps.create-pr.outputs.pr_number != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Wait a moment for auto-merge to process
          sleep 3
          
          # Check if PR is still open (auto-merge might have completed already)
          PR_STATE=$(gh pr view "${{ steps.create-pr.outputs.pr_number }}" --json state --jq '.state')
          
          if [ "$PR_STATE" = "OPEN" ]; then
            echo "PR still open, attempting manual merge..."
            gh pr merge "${{ steps.create-pr.outputs.pr_number }}" \
              --squash \
              --delete-branch \
              --body "Merged by GitHub Actions" || echo "Merge will complete via auto-merge"
          else
            echo "✅ PR already merged via auto-merge"
          fi
