#!/usr/bin/env node
// Simple release helper: runs `npm version <type>`, then prepends a changelog entry to CHANGELOG.md
import { execSync } from "child_process";
import fs from "fs";
import path from "path";

const type = process.argv[2] || "patch";
if (!["patch", "minor", "major"].includes(type)) {
  console.error("Usage: node scripts/release.js <patch|minor|major>");
  process.exit(1);
}

try {
  console.log(`Running npm version ${type} ...`);
  const out = execSync(`npm version ${type}`, { stdio: "pipe" })
    .toString()
    .trim();
  console.log(out);

  // Extract new version from output (git tag like v7.1.1)
  const m = out.match(/v?(\d+\.\d+\.\d+)/);
  const ver = m ? m[1] : null;
  if (!ver) {
    console.warn(
      "Could not parse version from npm output; skipping changelog update."
    );
    process.exit(0);
  }

  const changelogPath = path.resolve(process.cwd(), "CHANGELOG.md");
  const date = new Date().toISOString().split("T")[0];
  const entry = `## ${ver} - ${date}\n- Release generated by scripts/release.js\n\n`;

  let existing = "";
  try {
    existing = fs.readFileSync(changelogPath, "utf8");
  } catch (e) {
    existing = "";
  }
  fs.writeFileSync(changelogPath, entry + existing, "utf8");
  console.log(`Updated CHANGELOG.md with version ${ver}`);
} catch (e) {
  console.error("Release helper failed:", e.message || e);
  process.exit(1);
}
